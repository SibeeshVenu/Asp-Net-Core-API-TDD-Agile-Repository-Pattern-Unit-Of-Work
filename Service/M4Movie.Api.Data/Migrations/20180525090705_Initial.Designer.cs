// <auto-generated />
using System;
using M4Movie.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Internal;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;

namespace M4Movie.Api.Data.Migrations
{
    [DbContext(typeof(MovieApiContext))]
    [Migration("20180525090705_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-preview1-28290")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("M4Movie.Api.Contracts.Movie", b =>
                {
                    b.Property<long>("MovieId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("MoviRating")
                        .HasMaxLength(20);

                    b.Property<string>("MovieDescription")
                        .HasMaxLength(750);

                    b.Property<string>("MovieImage")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("MovieName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("MovieId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("M4Movie.Api.Contracts.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("UserEmail")
                        .HasMaxLength(50);

                    b.Property<string>("UserImage")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("M4Movie.Api.Contracts.WatchList", b =>
                {
                    b.Property<long>("WatchListId")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("MovieId");

                    b.Property<long>("UserId");

                    b.HasKey("WatchListId");

                    b.HasIndex("MovieId");

                    b.ToTable("WatchLists");
                });

            modelBuilder.Entity("M4Movie.Api.Contracts.WatchList", b =>
                {
                    b.HasOne("M4Movie.Api.Contracts.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
